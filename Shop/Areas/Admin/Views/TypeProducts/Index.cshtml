@model IEnumerable<Shop.Areas.Admin.Models.TypeProduct>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>
<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">New message</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="category-name" class="col-form-label">Name</label>
                        <input type="text" class="form-control" id="category-name">
                    </div>

                    <div class="form-group" hidden="hidden">
                        <input type="text" class="form-control" id="category-id">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Send message</button>
            </div>
        </div>
    </div>
</div>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
                <td>
                    <button data-toggle="modal" data-target="#exampleModal" class="bntEditCategory" type="button" name="btn-sua" value="@item.Id">Sua</button>
                </td>
            </tr>
        }
    </tbody>
</table>
@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        let url = 'api/TypeProductsAPI/getCategory?id=%id%';
        //$('button[name=btn-edit]').click(function () {
        //    fetch(url)
        //        .then(function (response) {
        //            if (!response.ok) {
        //                throw Error(response.statusText);
        //            }
        //            // Read the response as json.
        //            return response.json();
        //        })
        //        .then(function (responseAsJson) {
        //            // Do stuff with the JSON
        //            console.log(responseAsJson);
        //        })
        //        .catch(function (error) {
        //            console.log('Looks like there was a problem: \n', error);
        //        });
        //})

        $('#exampleModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget)
            var clickedButton = $(event.target);
            var modal = $(this);

            let idCategory = button[0].value;

            fetch(url.replace("%id%", idCategory), { method: 'GET' })
                .then(function (response) {
                    if (!response.ok) {
                        throw Error(response.statusText);
                    }
                    return response.json();
                })
                .then(function (responseAsJson) {
                    console.log(responseAsJson);
                    modal.find('#category-id').val(responseAsJson.Id);
                    modal.find('#category-name').val(responseAsJson.TenLoai);
                })
                .catch(function (error) {
                    console.log('Looks like there was a problem: \n', error);
                });
        });

    </script>
}